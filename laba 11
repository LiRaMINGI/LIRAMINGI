//ЛАБА 11_1
#include <iostream>
#include <cmath>

bool isPrime(int n) {
    if (n > 1)
    for (int i = 2; i <= sqrt(n); ++i) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

void sort(int* pos, int n) {
    for (int i = 0; i < n - 1; ++i) {
        for (int j = 0; j < n - i - 1; ++j) {
            if (pos[j] > pos[j + 1]) {
                int temp = pos[j];
                pos[j] = pos[j + 1];
                pos[j + 1] = temp;
            }
        }
    }
}

int main() {
    setlocale(LC_ALL,"RU");
    int n;
    std::cout << "Введите размер последовательности: ";
    std::cin >> n;

    int* pos = new int[n];

    std::cout << "Введите элементы последовательности: ";
    for (int i = 0; i < n; ++i) {
        std::cin >> pos[i];
    }

    bool ExitPrime = false;
    for (int i = 0; i < n; ++i) {
        if (isPrime(pos[i])) {
            ExitPrime = true;
            break;
        }
    }

    if (ExitPrime) {
        sort(pos, n);
    }

    std::cout << "Отсортированная последовательность: ";
    for (int i = 0; i < n; ++i) {
        std::cout << pos[i] << " ";
    }
    std::cout << std::endl;

    delete[] pos;

    return 0;
}

////////////////////////
#include <iostream>
 прога_11 задача_3
int main() {
    int n, m;

    std::cin >> n >> m;
    int** matrix = new int* [n];
    for (int i = 0; i < n; ++i) {
        matrix[i] = new int[m];
    }

    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            std::cin >> matrix[i][j];
        }
    }

    int minstr = 0;
    int MinKCh = INT_MAX;


    for (int i = 0; i < n; ++i) {
        int k = 0;
        for (int j = 0; j < m; ++j)
        {
            if (matrix[i][j] % 2 == 0)
                k++;
        }
        if (k < MinKCh) {
            MinKCh = k;
            minstr = i;
        }
    }

    for (int j = 0; j < n; ++j) {
        matrix[minstr][j] = matrix[minstr][j] * matrix[minstr][j];
    }


    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j)
        {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << "\n";
    }

    for (int i = 0; i < n; ++i) {
        delete[] matrix[i];
    }
    delete[] matrix;

    return 0;
}
